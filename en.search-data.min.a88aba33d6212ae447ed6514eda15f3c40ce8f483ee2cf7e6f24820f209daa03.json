[{"id":0,"href":"/online-documents/docs/010-introduction/","title":"Introduction","section":"Docs","content":" Introduction # For those who are not familiar with the use of online documents such as these, this chapter introduces the concept of a \u0026lsquo;Static Site Generator\u0026rsquo; and gives a broad view of how it is used.\nWhat is a ‘Static Site Generator’? # The document you are reading now is stored on a server. It has been delivered over the internet to a browser (Safari, Chrome or Firefox, for example) on your device, which may be a desktop PC (for the older readers), laptop, tablet or phone, for you to read. That is ‘read’ in the widest sense – It could include pictures, sound or video. The important point is that the information you see is what is stored on the server and can only be changed by altering the files on the server. That explains the word ‘Static’. This allows for fast download of content and is ideal for an electronic book like this.\nMany websites allow interaction – selecting a purchase from an online catalogue, for example. These are ‘Dynamic’ websites but we are not going there. In many cases the static/dynamic distinction may be blurred, anyway. At the most basic level, the content of a web page is written in a markup language called html (hypertext markup language) which includes tags defining the appearance – paragraphs, headings and so on. You could write a website directly in html but people want something more exciting, with various colour schemes and layouts. Without going into detail, this involves extending the basic html to include features such as stylesheets and even code such as JavaScript. This allows features such as navigation menus and a layout that changes depending on the width of your browser screen.\nAll of this makes life difficult for anyone who just wants a nice-looking web page. So, several very clever people have produced programs which take basic text and transform it into a static web page. These are called ‘Static Site Generators’ – Jekyll is one example and Hugo is another. Taking it a step further, the design of the site generator allows other clever people to add different ‘themes’, giving you a wide choice of the appearance of your final website.\nThis document, like the other CCCBR online documents, uses the Hugo ‘Book’ theme produced by Alex Shpak. It is somewhat austere, without gimmicks, but seems appropriate for our documents. The basic text for a Hugo document is written in a scripting language called Markdown, which will be described later. I\u0026rsquo;m getting ahead of myself - hyperlinks are shown in blue (not underlined). But we will come to those.\nHow do you use Hugo? # If you have opened this using a desktop, laptop or tablet in landscape mode (essentially with a wide screen) you will see the text in the centre of the screen, with navigation menus on left and right sides. The left hand menu navigates to the main sub-divisions of the document. We will see later that these are actually separate web pages but we will call them ‘chapters’ to maintain the concept of a ‘book’. The right hand menu navigates to the sections and sub-sections of the current chapter and will change depending which chapter you are reading.\nIf you are reading this on a device with a narrower screen (a tablet in portrait mode or a phone), there is no room for the menus. Instead, you will see menu bars (three stacked horizontal lines) at top left and top right. Clicking one of these takes you to the appropriate chapter or section; clicking again removes the menu.\nYou can simulate this on a desktop or laptop by reducing the width of the browser window. A convenient way to use a tablet (such as an iPad) is to hold it horizontally and use the navigation menus to locate the chapter of interest, then turn it vertical to read the text, which will fill the screen. The presence of these navigation menus removes the need for a conventional contents list and you will later that the use of hyperlinks allows you to move between chapters and sections without the need for text such as “see Chapter 5”. Neither do we need to say things like “see page 73” because there is no pagination as in a conventional book – you just scroll through each chapter.\nDisclaimer # Whilst every effort has been made to ensure the accuracy of this information, neither contributors nor the Central Council of Church Bell Ringers can accept responsibility for any inaccuracies or for any activities undertaken based on the information provided.\nVersion 0.1, September 2024\n© 2024 Central Council of Church Bell Ringers\n"},{"id":1,"href":"/online-documents/docs/015-files-and-folders/","title":"Files \u0026 Folders","section":"Docs","content":" Files and Folders # Before getting into the detail of how to produce content for a document like this, it is important to understand how that content is organised into files and folders, and how these are used to generate the navigation menus. At this point, it is not necessary to understand the contents of the files: that will be covered in later chapters.\nAs an example, we will look at the organisation of files and folders in the version of Belfry Upkeep current at the time of writing.\nThe screenshots here are taken from the Belfry Upkeep repository on GitHub. This will be explained later. Single Level # Figure 1: Belfry Upkeep repository top level\nFor now, you can ignore all the files and folder shown in Figure 1, except for the folder called \u0026lsquo;content\u0026rsquo;.\nFigure 2: The \u0026lsquo;content\u0026rsquo; folder\nThe \u0026lsquo;content\u0026rsquo; folder (Figure 2) defines the content of the home page - the first page a reader will see on opening the document. The Markdown file \u0026lsquo;_index.md\u0026rsquo; contains the text of the page and \u0026lsquo;up-holland-bells.jpg\u0026rsquo; is an image file (only one on this page). Note the folder \u0026lsquo;docs\u0026rsquo;. This contains all the other chapters.\nFigure 3: The \u0026lsquo;docs\u0026rsquo; folder within \u0026lsquo;content\u0026rsquo;\nAs you can see in Figure 3, the \u0026lsquo;docs\u0026rsquo; file contains a folder for each chapter. If you are familiar with Belfry Upkeep you will recognise the names.\nAs an example, Figure 4 shows the contents of the folder for the chapter on Bell Frames.\nFigure 4: The \u0026lsquo;bell-frames\u0026rsquo; folder within docs\nThe Markdown file \u0026lsquo;index.md\u0026rsquo; contains the text and there are seven .jpg files containing images. I will say more about the naming of image files in the chapter on Images.\nPlease don\u0026rsquo;t overthink the information in this chapter. All will become clear later. But you should take away the following points:\nNote that I have adopted a style for the names of folders and files all to be in lower case, using a hyphen (-) to separate meaningful words. All of this material will finish up in a GitHub repository and GitHub is case-sensitive. This means that a mixture of upper and lower case can lead to unexpected errors. So I decided to use all lower case, including for email addresses and external links. Note that the text of a chapter is always stored in an \u0026lsquo;index\u0026rsquo; file, called \u0026lsquo;index.md\u0026rsquo;, or \u0026lsquo;_index.md\u0026rsquo; when the chapter includes a \u0026lsquo;docs\u0026rsquo; folder - note the underscore (_). In Figure 3, you will see that I have prefaced each chapter name with a three-digit code. This does NOT determine the order in which the chapters appear in the navigation menu. We will come to that later. It is simply a way of making directory listings reflect the order of the chapters. The digits increase by ten to allow extra chapters to be inserted and there are three digits to allow for more than nine chapters. Multiple Level # This section is perhaps advanced for this early part of this document but it is convenient to cover it here. So far, we have regarded the content within a folder as a \u0026lsquo;chapter\u0026rsquo;. In web terms, each chapter is a separate web page. But Hugo allows you to have \u0026lsquo;sub-chapters\u0026rsquo; - effectively a chapter within a chapter, although both are still separate web pages. Figure 5 shows an example from Belfry Upkeep.\nFigure 5: A sub-chapter\nFigure 5 is part of the left-hand navigation menu (we will come to those soon). You will see that the \u0026lsquo;Health \u0026amp; Safety\u0026rsquo; has a sub-chapter \u0026lsquo;Avian Influenza\u0026rsquo; with the name indented.\nFigure 6 shows the contents of the \u0026lsquo;Health \u0026amp; Safety\u0026rsquo; folder.\nFigure 6: The contents of the Health and Safety chapter\nYou will see that we have an \u0026lsquo;_index.md\u0026rsquo; file (with underscore) and an enclosed folder titled \u0026lsquo;avian-flu\u0026rsquo;.\nFigure 7 shows the contents of the enclosed folder which is somewhat boring, having only an \u0026lsquo;index.md\u0026rsquo; file (no underscore) and no figures.\nFigure 7: The contents of the enclosed folder\nStyle Tip - Use of Sub-chapters: In this case, an article on avian flu became available which was relevent to the Health \u0026amp; Safety but which, in terms of size and writing style, would have unbalanced the chapter. So the avian flu article was included as a sub-chapter, presented as an \u0026ldquo;Appendix\u0026rdquo; to the Health \u0026amp; Safety chapter. Two further examples can be found in the \u0026lsquo;Stakeholder Engagement\u0026rsquo; and \u0026lsquo;Contract Specification\u0026rsquo; chapters of Belfry Projects. Here, the original draft of each chapter split into two parts: the first with general guidance and the second with specific examples. The second parts were presented as sub-chapters, identified as \u0026lsquo;addendums\u0026rsquo;. Disclaimer # Whilst every effort has been made to ensure the accuracy of this information, neither contributors nor the Central Council of Church Bell Ringers can accept responsibility for any inaccuracies or for any activities undertaken based on the information provided.\nVersion 0.1, August 2023\n© 2023 Central Council of Church Bell Ringers\n"}]